// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SignIn /> renders SignIn 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    onBack={[Function]}
    onClose={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <FormHeader
          onBack={[Function]}
          title="Sign In"
/>,
        <form
          className={undefined}
          name="SignInForm"
          noValidate={true}
          onSubmit={[Function]}
>
          <TextInput
                    error={true}
                    errorMessage="Email is not valid"
                    label="Email"
                    name="email"
                    onChange={[Function]}
                    required="true"
                    type="email"
                    value=""
          />
          <TextInput
                    error={true}
                    errorMessage="Password should be between 5 and 12 characters"
                    label="Password"
                    name="password"
                    onChange={[Function]}
                    required="true"
                    type="password"
                    value=""
          />
          <div
                    className={undefined}
          >
                    <input
                              className={undefined}
                              disabled={true}
                              type="submit"
                              value="Sign In"
                    />
          </div>
</form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onBack": [Function],
          "title": "Sign In",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <TextInput
              error={true}
              errorMessage="Email is not valid"
              label="Email"
              name="email"
              onChange={[Function]}
              required="true"
              type="email"
              value=""
/>,
            <TextInput
              error={true}
              errorMessage="Password should be between 5 and 12 characters"
              label="Password"
              name="password"
              onChange={[Function]}
              required="true"
              type="password"
              value=""
/>,
            <div
              className={undefined}
>
              <input
                            className={undefined}
                            disabled={true}
                            type="submit"
                            value="Sign In"
              />
</div>,
          ],
          "className": undefined,
          "name": "SignInForm",
          "noValidate": true,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": true,
              "errorMessage": "Email is not valid",
              "label": "Email",
              "name": "email",
              "onChange": [Function],
              "required": "true",
              "type": "email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": true,
              "errorMessage": "Password should be between 5 and 12 characters",
              "label": "Password",
              "name": "password",
              "onChange": [Function],
              "required": "true",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className={undefined}
                disabled={true}
                type="submit"
                value="Sign In"
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": undefined,
                "disabled": true,
                "type": "submit",
                "value": "Sign In",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FormHeader
            onBack={[Function]}
            title="Sign In"
/>,
          <form
            className={undefined}
            name="SignInForm"
            noValidate={true}
            onSubmit={[Function]}
>
            <TextInput
                        error={true}
                        errorMessage="Email is not valid"
                        label="Email"
                        name="email"
                        onChange={[Function]}
                        required="true"
                        type="email"
                        value=""
            />
            <TextInput
                        error={true}
                        errorMessage="Password should be between 5 and 12 characters"
                        label="Password"
                        name="password"
                        onChange={[Function]}
                        required="true"
                        type="password"
                        value=""
            />
            <div
                        className={undefined}
            >
                        <input
                                    className={undefined}
                                    disabled={true}
                                    type="submit"
                                    value="Sign In"
                        />
            </div>
</form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onBack": [Function],
            "title": "Sign In",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <TextInput
                error={true}
                errorMessage="Email is not valid"
                label="Email"
                name="email"
                onChange={[Function]}
                required="true"
                type="email"
                value=""
/>,
              <TextInput
                error={true}
                errorMessage="Password should be between 5 and 12 characters"
                label="Password"
                name="password"
                onChange={[Function]}
                required="true"
                type="password"
                value=""
/>,
              <div
                className={undefined}
>
                <input
                                className={undefined}
                                disabled={true}
                                type="submit"
                                value="Sign In"
                />
</div>,
            ],
            "className": undefined,
            "name": "SignInForm",
            "noValidate": true,
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": true,
                "errorMessage": "Email is not valid",
                "label": "Email",
                "name": "email",
                "onChange": [Function],
                "required": "true",
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": true,
                "errorMessage": "Password should be between 5 and 12 characters",
                "label": "Password",
                "name": "password",
                "onChange": [Function],
                "required": "true",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className={undefined}
                  disabled={true}
                  type="submit"
                  value="Sign In"
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": undefined,
                  "disabled": true,
                  "type": "submit",
                  "value": "Sign In",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
