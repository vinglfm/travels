// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders LogIn component when state is chagned to LogIn 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    onSignIn={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <LogIn
        onBack={[Function]}
        onLogIn={[Function]}
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "onBack": [Function],
        "onLogIn": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <LogIn
          onBack={[Function]}
          onLogIn={[Function]}
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onBack": [Function],
          "onLogIn": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders SignIn 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    onSignIn={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <t
                appId="1817436878556969"
                autoLoad={false}
                callback={[Function]}
                cssClass="kep-login-facebook"
                fields="name,email"
                size="metro"
                tag="button"
                textButton="Facebook"
                typeButton="button"
        />
        <div
                className={undefined}
        >
                <span>
                        or
                </span>
        </div>
        <div
                className={undefined}
        >
                <a
                        onClick={[Function]}
                >
                        Log In
                </a>
        </div>
        <div
                className={undefined}
        >
                First time travel? 
                <a
                        onClick={[Function]}
                >
                        Sign Up
                </a>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <t
            appId="1817436878556969"
            autoLoad={false}
            callback={[Function]}
            cssClass="kep-login-facebook"
            fields="name,email"
            size="metro"
            tag="button"
            textButton="Facebook"
            typeButton="button"
/>,
          <div
            className={undefined}
>
            <span>
                        or
            </span>
</div>,
          <div
            className={undefined}
>
            <a
                        onClick={[Function]}
            >
                        Log In
            </a>
</div>,
          <div
            className={undefined}
>
            First time travel? 
            <a
                        onClick={[Function]}
            >
                        Sign Up
            </a>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "appId": "1817436878556969",
            "autoLoad": false,
            "callback": [Function],
            "cssClass": "kep-login-facebook",
            "fields": "name,email",
            "size": "metro",
            "tag": "button",
            "textButton": "Facebook",
            "typeButton": "button",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              or
</span>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "or",
            },
            "ref": null,
            "rendered": "or",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <a
              onClick={[Function]}
>
              Log In
</a>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Log In",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Log In",
            "type": "a",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "First time travel? ",
              <a
                onClick={[Function]}
>
                Sign Up
</a>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            "First time travel? ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign Up",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Sign Up",
              "type": "a",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <t
                    appId="1817436878556969"
                    autoLoad={false}
                    callback={[Function]}
                    cssClass="kep-login-facebook"
                    fields="name,email"
                    size="metro"
                    tag="button"
                    textButton="Facebook"
                    typeButton="button"
          />
          <div
                    className={undefined}
          >
                    <span>
                              or
                    </span>
          </div>
          <div
                    className={undefined}
          >
                    <a
                              onClick={[Function]}
                    >
                              Log In
                    </a>
          </div>
          <div
                    className={undefined}
          >
                    First time travel? 
                    <a
                              onClick={[Function]}
                    >
                              Sign Up
                    </a>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <t
              appId="1817436878556969"
              autoLoad={false}
              callback={[Function]}
              cssClass="kep-login-facebook"
              fields="name,email"
              size="metro"
              tag="button"
              textButton="Facebook"
              typeButton="button"
/>,
            <div
              className={undefined}
>
              <span>
                            or
              </span>
</div>,
            <div
              className={undefined}
>
              <a
                            onClick={[Function]}
              >
                            Log In
              </a>
</div>,
            <div
              className={undefined}
>
              First time travel? 
              <a
                            onClick={[Function]}
              >
                            Sign Up
              </a>
</div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appId": "1817436878556969",
              "autoLoad": false,
              "callback": [Function],
              "cssClass": "kep-login-facebook",
              "fields": "name,email",
              "size": "metro",
              "tag": "button",
              "textButton": "Facebook",
              "typeButton": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                or
</span>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "or",
              },
              "ref": null,
              "rendered": "or",
              "type": "span",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <a
                onClick={[Function]}
>
                Log In
</a>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Log In",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Log In",
              "type": "a",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "First time travel? ",
                <a
                  onClick={[Function]}
>
                  Sign Up
</a>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              "First time travel? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sign Up",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Sign Up",
                "type": "a",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders SignUp component when state is changed to SignUp 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignIn
    onSignIn={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <SignUp
        onBack={[Function]}
        onSignUp={[Function]}
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "onBack": [Function],
        "onSignUp": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SignUp
          onBack={[Function]}
          onSignUp={[Function]}
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onBack": [Function],
          "onSignUp": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
