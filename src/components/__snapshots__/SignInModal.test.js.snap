// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders SignInModal in base state 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignInModal
    handleClose={[Function]}
    open={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(DialogTitle)>
          <div
                    className={undefined}
          >
                    Continue with
          </div>
</WithStyles(DialogTitle)>,
        <WithStyles(DialogContent)>
          <SignIn
                    logInComponent={[Function]}
                    signUpComponent={[Function]}
          />
</WithStyles(DialogContent)>,
      ],
      "onClose": [Function],
      "onEnter": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className={undefined}
>
            Continue with
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Continue with",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Continue with",
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <SignIn
            logInComponent={[Function]}
            signUpComponent={[Function]}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "logInComponent": [Function],
            "signUpComponent": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(DialogTitle)>
            <div
                        className={undefined}
            >
                        Continue with
            </div>
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <SignIn
                        logInComponent={[Function]}
                        signUpComponent={[Function]}
            />
</WithStyles(DialogContent)>,
        ],
        "onClose": [Function],
        "onEnter": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className={undefined}
>
              Continue with
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Continue with",
              "className": undefined,
            },
            "ref": null,
            "rendered": "Continue with",
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <SignIn
              logInComponent={[Function]}
              signUpComponent={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "logInComponent": [Function],
              "signUpComponent": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders SignInModal in logIn state 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignInModal
    handleClose={[Function]}
    open={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(DialogTitle)>
          <div
                    className={undefined}
          >
                    Continue with
          </div>
</WithStyles(DialogTitle)>,
        <WithStyles(DialogContent)>
          <LogIn
                    baseComponent={[Function]}
          />
</WithStyles(DialogContent)>,
      ],
      "onClose": [Function],
      "onEnter": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className={undefined}
>
            Continue with
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Continue with",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Continue with",
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <LogIn
            baseComponent={[Function]}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "baseComponent": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(DialogTitle)>
            <div
                        className={undefined}
            >
                        Continue with
            </div>
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <LogIn
                        baseComponent={[Function]}
            />
</WithStyles(DialogContent)>,
        ],
        "onClose": [Function],
        "onEnter": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className={undefined}
>
              Continue with
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Continue with",
              "className": undefined,
            },
            "ref": null,
            "rendered": "Continue with",
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <LogIn
              baseComponent={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "baseComponent": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders SignInModal in signUp state 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignInModal
    handleClose={[Function]}
    open={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(DialogTitle)>
          <div
                    className={undefined}
          >
                    Continue with
          </div>
</WithStyles(DialogTitle)>,
        <WithStyles(DialogContent)>
          <SignUp
                    baseComponent={[Function]}
          />
</WithStyles(DialogContent)>,
      ],
      "onClose": [Function],
      "onEnter": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className={undefined}
>
            Continue with
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Continue with",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Continue with",
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <SignUp
            baseComponent={[Function]}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "baseComponent": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(DialogTitle)>
            <div
                        className={undefined}
            >
                        Continue with
            </div>
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <SignUp
                        baseComponent={[Function]}
            />
</WithStyles(DialogContent)>,
        ],
        "onClose": [Function],
        "onEnter": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className={undefined}
>
              Continue with
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Continue with",
              "className": undefined,
            },
            "ref": null,
            "rendered": "Continue with",
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <SignUp
              baseComponent={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "baseComponent": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
